Terminals unused in grammar

   ADDRESSOF


State 60 conflicts: 1 reduce/reduce
State 146 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: Gdeclaration main_function

    2 Gdeclaration: DECL GdeclStatements ENDDECL

    3 GdeclStatements: /* empty */
    4                | GdeclStatements GdeclStatement

    5 GdeclStatement: type Gvars SEMICOLON

    6 Gvars: Gvar
    7      | Gvars COMMA Gvar

    8 type: INTEGER
    9     | BOOLEAN

   10 Gvar: ID
   11     | ID LSQUARE NUMBER RSQUARE

   12 main_function: INTEGER MAIN LPAREN RPAREN LFLOWER fbody RFLOWER

   13 fbody: declaration beginbody

   14 declaration: DECL declStatements ENDDECL

   15 declStatements: /* empty */
   16               | declStatements declStatement

   17 declStatement: type vars SEMICOLON

   18 vars: var
   19     | vars COMMA var

   20 var: ID
   21    | ID LSQUARE aexpression RSQUARE

   22 beginbody: BEGINN statements return END

   23 statements: /* empty */
   24           | statements statement

   25 statement: ifelse
   26          | dowhile
   27          | read
   28          | write
   29          | astatement

   30 ifelse: IF lexpression THEN statements ENDIF SEMICOLON
   31       | IF lexpression THEN statements ELSE statements ENDIF SEMICOLON

   32 dowhile: WHILE lexpression DO statements ENDWHILE SEMICOLON

   33 astatement: ID ASSIGN expression SEMICOLON
   34           | ID LSQUARE aexpression RSQUARE ASSIGN expression SEMICOLON

   35 read: READ LPAREN ID RPAREN SEMICOLON
   36     | READ LPAREN ID LSQUARE aexpression RSQUARE RPAREN SEMICOLON

   37 write: WRITE LPAREN aexpression RPAREN SEMICOLON

   38 return: RETURN expression SEMICOLON

   39 expression: aexpression PLUS aexpression
   40           | aexpression MINUS aexpression
   41           | aexpression MULT aexpression
   42           | aexpression DIVIDE aexpression
   43           | aexpression MODULUS aexpression
   44           | LPAREN aexpression RPAREN
   45           | NUMBER
   46           | lexpression

   47 aexpression: aexpression PLUS aexpression
   48            | aexpression MINUS aexpression
   49            | aexpression MULT aexpression
   50            | aexpression DIVIDE aexpression
   51            | aexpression MODULUS aexpression
   52            | LPAREN aexpression RPAREN
   53            | NUMBER
   54            | ID
   55            | ID LSQUARE aexpression RSQUARE

   56 lexpression: aexpression EQUAL aexpression
   57            | aexpression LESS_THAN aexpression
   58            | aexpression GREATER_THAN aexpression
   59            | aexpression GREATER_EQ aexpression
   60            | aexpression LESS_EQUAL aexpression
   61            | aexpression NEQUAL aexpression
   62            | lexpression AND lexpression
   63            | lexpression OR lexpression
   64            | NOT lexpression
   65            | LPAREN lexpression RPAREN
   66            | TRUE
   67            | FALSE
   68            | ID
   69            | ID LSQUARE aexpression RSQUARE


Terminals, with rules where they appear

$end (0) 0
error (256)
DECL (258) 2 14
ENDDECL (259) 2 14
SEMICOLON (260) 5 17 30 31 32 33 34 35 36 37 38
COMMA (261) 7 19
INTEGER (262) 8 12
BOOLEAN (263) 9
ID (264) 10 11 20 21 33 34 35 36 54 55 68 69
LSQUARE (265) 11 21 34 36 55 69
RSQUARE (266) 11 21 34 36 55 69
TRUE (267) 66
FALSE (268) 67
ADDRESSOF (269)
MODULUS (270) 43 51
AND (271) 62
OR (272) 63
NOT (273) 64
READ (274) 35 36
WRITE (275) 37
IF (276) 30 31
ENDIF (277) 30 31
THEN (278) 30 31
ELSE (279) 31
WHILE (280) 32
NUMBER (281) 11 45 53
EQUAL (282) 56
ASSIGN (283) 33 34
NEQUAL (284) 61
LESS_THAN (285) 57
LESS_EQUAL (286) 60
GREATER_THAN (287) 58
GREATER_EQ (288) 59
PLUS (289) 39 47
MINUS (290) 40 48
MULT (291) 41 49
DIVIDE (292) 42 50
LPAREN (293) 12 35 36 37 44 52 65
RPAREN (294) 12 35 36 37 44 52 65
RFLOWER (295) 12
LFLOWER (296) 12
DO (297) 32
ENDWHILE (298) 32
BEGINN (299) 22
END (300) 22
RETURN (301) 38
MAIN (302) 12


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
Gdeclaration (50)
    on left: 2, on right: 1
GdeclStatements (51)
    on left: 3 4, on right: 2 4
GdeclStatement (52)
    on left: 5, on right: 4
Gvars (53)
    on left: 6 7, on right: 5 7
type (54)
    on left: 8 9, on right: 5 17
Gvar (55)
    on left: 10 11, on right: 6 7
main_function (56)
    on left: 12, on right: 1
fbody (57)
    on left: 13, on right: 12
declaration (58)
    on left: 14, on right: 13
declStatements (59)
    on left: 15 16, on right: 14 16
declStatement (60)
    on left: 17, on right: 16
vars (61)
    on left: 18 19, on right: 17 19
var (62)
    on left: 20 21, on right: 18 19
beginbody (63)
    on left: 22, on right: 13
statements (64)
    on left: 23 24, on right: 22 24 30 31 32
statement (65)
    on left: 25 26 27 28 29, on right: 24
ifelse (66)
    on left: 30 31, on right: 25
dowhile (67)
    on left: 32, on right: 26
astatement (68)
    on left: 33 34, on right: 29
read (69)
    on left: 35 36, on right: 27
write (70)
    on left: 37, on right: 28
return (71)
    on left: 38, on right: 22
expression (72)
    on left: 39 40 41 42 43 44 45 46, on right: 33 34 38
aexpression (73)
    on left: 47 48 49 50 51 52 53 54 55, on right: 21 34 36 37 39 40
    41 42 43 44 47 48 49 50 51 52 55 56 57 58 59 60 61 69
lexpression (74)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69, on right: 30
    31 32 46 62 63 64 65


state 0

    0 $accept: . program $end

    DECL  shift, and go to state 1

    program       go to state 2
    Gdeclaration  go to state 3


state 1

    2 Gdeclaration: DECL . GdeclStatements ENDDECL

    $default  reduce using rule 3 (GdeclStatements)

    GdeclStatements  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: Gdeclaration . main_function

    INTEGER  shift, and go to state 6

    main_function  go to state 7


state 4

    2 Gdeclaration: DECL GdeclStatements . ENDDECL
    4 GdeclStatements: GdeclStatements . GdeclStatement

    ENDDECL  shift, and go to state 8
    INTEGER  shift, and go to state 9
    BOOLEAN  shift, and go to state 10

    GdeclStatement  go to state 11
    type            go to state 12


state 5

    0 $accept: program $end .

    $default  accept


state 6

   12 main_function: INTEGER . MAIN LPAREN RPAREN LFLOWER fbody RFLOWER

    MAIN  shift, and go to state 13


state 7

    1 program: Gdeclaration main_function .

    $default  reduce using rule 1 (program)


state 8

    2 Gdeclaration: DECL GdeclStatements ENDDECL .

    $default  reduce using rule 2 (Gdeclaration)


state 9

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


state 10

    9 type: BOOLEAN .

    $default  reduce using rule 9 (type)


state 11

    4 GdeclStatements: GdeclStatements GdeclStatement .

    $default  reduce using rule 4 (GdeclStatements)


state 12

    5 GdeclStatement: type . Gvars SEMICOLON

    ID  shift, and go to state 14

    Gvars  go to state 15
    Gvar   go to state 16


state 13

   12 main_function: INTEGER MAIN . LPAREN RPAREN LFLOWER fbody RFLOWER

    LPAREN  shift, and go to state 17


state 14

   10 Gvar: ID .
   11     | ID . LSQUARE NUMBER RSQUARE

    LSQUARE  shift, and go to state 18

    $default  reduce using rule 10 (Gvar)


state 15

    5 GdeclStatement: type Gvars . SEMICOLON
    7 Gvars: Gvars . COMMA Gvar

    SEMICOLON  shift, and go to state 19
    COMMA      shift, and go to state 20


state 16

    6 Gvars: Gvar .

    $default  reduce using rule 6 (Gvars)


state 17

   12 main_function: INTEGER MAIN LPAREN . RPAREN LFLOWER fbody RFLOWER

    RPAREN  shift, and go to state 21


state 18

   11 Gvar: ID LSQUARE . NUMBER RSQUARE

    NUMBER  shift, and go to state 22


state 19

    5 GdeclStatement: type Gvars SEMICOLON .

    $default  reduce using rule 5 (GdeclStatement)


state 20

    7 Gvars: Gvars COMMA . Gvar

    ID  shift, and go to state 14

    Gvar  go to state 23


state 21

   12 main_function: INTEGER MAIN LPAREN RPAREN . LFLOWER fbody RFLOWER

    LFLOWER  shift, and go to state 24


state 22

   11 Gvar: ID LSQUARE NUMBER . RSQUARE

    RSQUARE  shift, and go to state 25


state 23

    7 Gvars: Gvars COMMA Gvar .

    $default  reduce using rule 7 (Gvars)


state 24

   12 main_function: INTEGER MAIN LPAREN RPAREN LFLOWER . fbody RFLOWER

    DECL  shift, and go to state 26

    fbody        go to state 27
    declaration  go to state 28


state 25

   11 Gvar: ID LSQUARE NUMBER RSQUARE .

    $default  reduce using rule 11 (Gvar)


state 26

   14 declaration: DECL . declStatements ENDDECL

    $default  reduce using rule 15 (declStatements)

    declStatements  go to state 29


state 27

   12 main_function: INTEGER MAIN LPAREN RPAREN LFLOWER fbody . RFLOWER

    RFLOWER  shift, and go to state 30


state 28

   13 fbody: declaration . beginbody

    BEGINN  shift, and go to state 31

    beginbody  go to state 32


state 29

   14 declaration: DECL declStatements . ENDDECL
   16 declStatements: declStatements . declStatement

    ENDDECL  shift, and go to state 33
    INTEGER  shift, and go to state 9
    BOOLEAN  shift, and go to state 10

    type           go to state 34
    declStatement  go to state 35


state 30

   12 main_function: INTEGER MAIN LPAREN RPAREN LFLOWER fbody RFLOWER .

    $default  reduce using rule 12 (main_function)


state 31

   22 beginbody: BEGINN . statements return END

    $default  reduce using rule 23 (statements)

    statements  go to state 36


state 32

   13 fbody: declaration beginbody .

    $default  reduce using rule 13 (fbody)


state 33

   14 declaration: DECL declStatements ENDDECL .

    $default  reduce using rule 14 (declaration)


state 34

   17 declStatement: type . vars SEMICOLON

    ID  shift, and go to state 37

    vars  go to state 38
    var   go to state 39


state 35

   16 declStatements: declStatements declStatement .

    $default  reduce using rule 16 (declStatements)


state 36

   22 beginbody: BEGINN statements . return END
   24 statements: statements . statement

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    RETURN  shift, and go to state 45

    statement   go to state 46
    ifelse      go to state 47
    dowhile     go to state 48
    astatement  go to state 49
    read        go to state 50
    write       go to state 51
    return      go to state 52


state 37

   20 var: ID .
   21    | ID . LSQUARE aexpression RSQUARE

    LSQUARE  shift, and go to state 53

    $default  reduce using rule 20 (var)


state 38

   17 declStatement: type vars . SEMICOLON
   19 vars: vars . COMMA var

    SEMICOLON  shift, and go to state 54
    COMMA      shift, and go to state 55


state 39

   18 vars: var .

    $default  reduce using rule 18 (vars)


state 40

   33 astatement: ID . ASSIGN expression SEMICOLON
   34           | ID . LSQUARE aexpression RSQUARE ASSIGN expression SEMICOLON

    LSQUARE  shift, and go to state 56
    ASSIGN   shift, and go to state 57


state 41

   35 read: READ . LPAREN ID RPAREN SEMICOLON
   36     | READ . LPAREN ID LSQUARE aexpression RSQUARE RPAREN SEMICOLON

    LPAREN  shift, and go to state 58


state 42

   37 write: WRITE . LPAREN aexpression RPAREN SEMICOLON

    LPAREN  shift, and go to state 59


state 43

   30 ifelse: IF . lexpression THEN statements ENDIF SEMICOLON
   31       | IF . lexpression THEN statements ELSE statements ENDIF SEMICOLON

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 65

    aexpression  go to state 66
    lexpression  go to state 67


state 44

   32 dowhile: WHILE . lexpression DO statements ENDWHILE SEMICOLON

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 65

    aexpression  go to state 66
    lexpression  go to state 68


state 45

   38 return: RETURN . expression SEMICOLON

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 69
    LPAREN  shift, and go to state 70

    expression   go to state 71
    aexpression  go to state 72
    lexpression  go to state 73


state 46

   24 statements: statements statement .

    $default  reduce using rule 24 (statements)


state 47

   25 statement: ifelse .

    $default  reduce using rule 25 (statement)


state 48

   26 statement: dowhile .

    $default  reduce using rule 26 (statement)


state 49

   29 statement: astatement .

    $default  reduce using rule 29 (statement)


state 50

   27 statement: read .

    $default  reduce using rule 27 (statement)


state 51

   28 statement: write .

    $default  reduce using rule 28 (statement)


state 52

   22 beginbody: BEGINN statements return . END

    END  shift, and go to state 74


state 53

   21 var: ID LSQUARE . aexpression RSQUARE

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 77


state 54

   17 declStatement: type vars SEMICOLON .

    $default  reduce using rule 17 (declStatement)


state 55

   19 vars: vars COMMA . var

    ID  shift, and go to state 37

    var  go to state 78


state 56

   34 astatement: ID LSQUARE . aexpression RSQUARE ASSIGN expression SEMICOLON

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 79


state 57

   33 astatement: ID ASSIGN . expression SEMICOLON

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 69
    LPAREN  shift, and go to state 70

    expression   go to state 80
    aexpression  go to state 72
    lexpression  go to state 73


state 58

   35 read: READ LPAREN . ID RPAREN SEMICOLON
   36     | READ LPAREN . ID LSQUARE aexpression RSQUARE RPAREN SEMICOLON

    ID  shift, and go to state 81


state 59

   37 write: WRITE LPAREN . aexpression RPAREN SEMICOLON

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 82


state 60

   54 aexpression: ID .
   55            | ID . LSQUARE aexpression RSQUARE
   68 lexpression: ID .
   69            | ID . LSQUARE aexpression RSQUARE

    LSQUARE  shift, and go to state 83

    SEMICOLON  reduce using rule 68 (lexpression)
    AND        reduce using rule 68 (lexpression)
    OR         reduce using rule 68 (lexpression)
    THEN       reduce using rule 68 (lexpression)
    RPAREN     reduce using rule 54 (aexpression)
    RPAREN     [reduce using rule 68 (lexpression)]
    DO         reduce using rule 68 (lexpression)
    $default   reduce using rule 54 (aexpression)


state 61

   66 lexpression: TRUE .

    $default  reduce using rule 66 (lexpression)


state 62

   67 lexpression: FALSE .

    $default  reduce using rule 67 (lexpression)


state 63

   64 lexpression: NOT . lexpression

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 65

    aexpression  go to state 66
    lexpression  go to state 84


state 64

   53 aexpression: NUMBER .

    $default  reduce using rule 53 (aexpression)


state 65

   52 aexpression: LPAREN . aexpression RPAREN
   65 lexpression: LPAREN . lexpression RPAREN

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 65

    aexpression  go to state 85
    lexpression  go to state 86


state 66

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   56 lexpression: aexpression . EQUAL aexpression
   57            | aexpression . LESS_THAN aexpression
   58            | aexpression . GREATER_THAN aexpression
   59            | aexpression . GREATER_EQ aexpression
   60            | aexpression . LESS_EQUAL aexpression
   61            | aexpression . NEQUAL aexpression

    MODULUS       shift, and go to state 87
    EQUAL         shift, and go to state 88
    NEQUAL        shift, and go to state 89
    LESS_THAN     shift, and go to state 90
    LESS_EQUAL    shift, and go to state 91
    GREATER_THAN  shift, and go to state 92
    GREATER_EQ    shift, and go to state 93
    PLUS          shift, and go to state 94
    MINUS         shift, and go to state 95
    MULT          shift, and go to state 96
    DIVIDE        shift, and go to state 97


state 67

   30 ifelse: IF lexpression . THEN statements ENDIF SEMICOLON
   31       | IF lexpression . THEN statements ELSE statements ENDIF SEMICOLON
   62 lexpression: lexpression . AND lexpression
   63            | lexpression . OR lexpression

    AND   shift, and go to state 98
    OR    shift, and go to state 99
    THEN  shift, and go to state 100


state 68

   32 dowhile: WHILE lexpression . DO statements ENDWHILE SEMICOLON
   62 lexpression: lexpression . AND lexpression
   63            | lexpression . OR lexpression

    AND  shift, and go to state 98
    OR   shift, and go to state 99
    DO   shift, and go to state 101


state 69

   45 expression: NUMBER .
   53 aexpression: NUMBER .

    SEMICOLON  reduce using rule 45 (expression)
    $default   reduce using rule 53 (aexpression)


state 70

   44 expression: LPAREN . aexpression RPAREN
   52 aexpression: LPAREN . aexpression RPAREN
   65 lexpression: LPAREN . lexpression RPAREN

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 65

    aexpression  go to state 102
    lexpression  go to state 86


state 71

   38 return: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 103


state 72

   39 expression: aexpression . PLUS aexpression
   40           | aexpression . MINUS aexpression
   41           | aexpression . MULT aexpression
   42           | aexpression . DIVIDE aexpression
   43           | aexpression . MODULUS aexpression
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   56 lexpression: aexpression . EQUAL aexpression
   57            | aexpression . LESS_THAN aexpression
   58            | aexpression . GREATER_THAN aexpression
   59            | aexpression . GREATER_EQ aexpression
   60            | aexpression . LESS_EQUAL aexpression
   61            | aexpression . NEQUAL aexpression

    MODULUS       shift, and go to state 104
    EQUAL         shift, and go to state 88
    NEQUAL        shift, and go to state 89
    LESS_THAN     shift, and go to state 90
    LESS_EQUAL    shift, and go to state 91
    GREATER_THAN  shift, and go to state 92
    GREATER_EQ    shift, and go to state 93
    PLUS          shift, and go to state 105
    MINUS         shift, and go to state 106
    MULT          shift, and go to state 107
    DIVIDE        shift, and go to state 108


state 73

   46 expression: lexpression .
   62 lexpression: lexpression . AND lexpression
   63            | lexpression . OR lexpression

    AND  shift, and go to state 98
    OR   shift, and go to state 99

    $default  reduce using rule 46 (expression)


state 74

   22 beginbody: BEGINN statements return END .

    $default  reduce using rule 22 (beginbody)


state 75

   54 aexpression: ID .
   55            | ID . LSQUARE aexpression RSQUARE

    LSQUARE  shift, and go to state 109

    $default  reduce using rule 54 (aexpression)


state 76

   52 aexpression: LPAREN . aexpression RPAREN

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 110


state 77

   21 var: ID LSQUARE aexpression . RSQUARE
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    RSQUARE  shift, and go to state 111
    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97


state 78

   19 vars: vars COMMA var .

    $default  reduce using rule 19 (vars)


state 79

   34 astatement: ID LSQUARE aexpression . RSQUARE ASSIGN expression SEMICOLON
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    RSQUARE  shift, and go to state 112
    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97


state 80

   33 astatement: ID ASSIGN expression . SEMICOLON

    SEMICOLON  shift, and go to state 113


state 81

   35 read: READ LPAREN ID . RPAREN SEMICOLON
   36     | READ LPAREN ID . LSQUARE aexpression RSQUARE RPAREN SEMICOLON

    LSQUARE  shift, and go to state 114
    RPAREN   shift, and go to state 115


state 82

   37 write: WRITE LPAREN aexpression . RPAREN SEMICOLON
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97
    RPAREN   shift, and go to state 116


state 83

   55 aexpression: ID LSQUARE . aexpression RSQUARE
   69 lexpression: ID LSQUARE . aexpression RSQUARE

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 117


state 84

   62 lexpression: lexpression . AND lexpression
   63            | lexpression . OR lexpression
   64            | NOT lexpression .

    $default  reduce using rule 64 (lexpression)


state 85

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   52            | LPAREN aexpression . RPAREN
   56 lexpression: aexpression . EQUAL aexpression
   57            | aexpression . LESS_THAN aexpression
   58            | aexpression . GREATER_THAN aexpression
   59            | aexpression . GREATER_EQ aexpression
   60            | aexpression . LESS_EQUAL aexpression
   61            | aexpression . NEQUAL aexpression

    MODULUS       shift, and go to state 87
    EQUAL         shift, and go to state 88
    NEQUAL        shift, and go to state 89
    LESS_THAN     shift, and go to state 90
    LESS_EQUAL    shift, and go to state 91
    GREATER_THAN  shift, and go to state 92
    GREATER_EQ    shift, and go to state 93
    PLUS          shift, and go to state 94
    MINUS         shift, and go to state 95
    MULT          shift, and go to state 96
    DIVIDE        shift, and go to state 97
    RPAREN        shift, and go to state 118


state 86

   62 lexpression: lexpression . AND lexpression
   63            | lexpression . OR lexpression
   65            | LPAREN lexpression . RPAREN

    AND     shift, and go to state 98
    OR      shift, and go to state 99
    RPAREN  shift, and go to state 119


state 87

   51 aexpression: aexpression MODULUS . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 120


state 88

   56 lexpression: aexpression EQUAL . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 121


state 89

   61 lexpression: aexpression NEQUAL . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 122


state 90

   57 lexpression: aexpression LESS_THAN . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 123


state 91

   60 lexpression: aexpression LESS_EQUAL . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 124


state 92

   58 lexpression: aexpression GREATER_THAN . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 125


state 93

   59 lexpression: aexpression GREATER_EQ . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 126


state 94

   47 aexpression: aexpression PLUS . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 127


state 95

   48 aexpression: aexpression MINUS . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 128


state 96

   49 aexpression: aexpression MULT . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 129


state 97

   50 aexpression: aexpression DIVIDE . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 130


state 98

   62 lexpression: lexpression AND . lexpression

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 65

    aexpression  go to state 66
    lexpression  go to state 131


state 99

   63 lexpression: lexpression OR . lexpression

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 65

    aexpression  go to state 66
    lexpression  go to state 132


state 100

   30 ifelse: IF lexpression THEN . statements ENDIF SEMICOLON
   31       | IF lexpression THEN . statements ELSE statements ENDIF SEMICOLON

    $default  reduce using rule 23 (statements)

    statements  go to state 133


state 101

   32 dowhile: WHILE lexpression DO . statements ENDWHILE SEMICOLON

    $default  reduce using rule 23 (statements)

    statements  go to state 134


state 102

   44 expression: LPAREN aexpression . RPAREN
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   52            | LPAREN aexpression . RPAREN
   56 lexpression: aexpression . EQUAL aexpression
   57            | aexpression . LESS_THAN aexpression
   58            | aexpression . GREATER_THAN aexpression
   59            | aexpression . GREATER_EQ aexpression
   60            | aexpression . LESS_EQUAL aexpression
   61            | aexpression . NEQUAL aexpression

    MODULUS       shift, and go to state 87
    EQUAL         shift, and go to state 88
    NEQUAL        shift, and go to state 89
    LESS_THAN     shift, and go to state 90
    LESS_EQUAL    shift, and go to state 91
    GREATER_THAN  shift, and go to state 92
    GREATER_EQ    shift, and go to state 93
    PLUS          shift, and go to state 94
    MINUS         shift, and go to state 95
    MULT          shift, and go to state 96
    DIVIDE        shift, and go to state 97
    RPAREN        shift, and go to state 135


state 103

   38 return: RETURN expression SEMICOLON .

    $default  reduce using rule 38 (return)


state 104

   43 expression: aexpression MODULUS . aexpression
   51 aexpression: aexpression MODULUS . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 136


state 105

   39 expression: aexpression PLUS . aexpression
   47 aexpression: aexpression PLUS . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 137


state 106

   40 expression: aexpression MINUS . aexpression
   48 aexpression: aexpression MINUS . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 138


state 107

   41 expression: aexpression MULT . aexpression
   49 aexpression: aexpression MULT . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 139


state 108

   42 expression: aexpression DIVIDE . aexpression
   50 aexpression: aexpression DIVIDE . aexpression

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 140


state 109

   55 aexpression: ID LSQUARE . aexpression RSQUARE

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 141


state 110

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   52            | LPAREN aexpression . RPAREN

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97
    RPAREN   shift, and go to state 118


state 111

   21 var: ID LSQUARE aexpression RSQUARE .

    $default  reduce using rule 21 (var)


state 112

   34 astatement: ID LSQUARE aexpression RSQUARE . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 142


state 113

   33 astatement: ID ASSIGN expression SEMICOLON .

    $default  reduce using rule 33 (astatement)


state 114

   36 read: READ LPAREN ID LSQUARE . aexpression RSQUARE RPAREN SEMICOLON

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 64
    LPAREN  shift, and go to state 76

    aexpression  go to state 143


state 115

   35 read: READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 116

   37 write: WRITE LPAREN aexpression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 145


state 117

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   55            | ID LSQUARE aexpression . RSQUARE
   69 lexpression: ID LSQUARE aexpression . RSQUARE

    RSQUARE  shift, and go to state 146
    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97


state 118

   52 aexpression: LPAREN aexpression RPAREN .

    $default  reduce using rule 52 (aexpression)


state 119

   65 lexpression: LPAREN lexpression RPAREN .

    $default  reduce using rule 65 (lexpression)


state 120

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   51            | aexpression MODULUS aexpression .

    $default  reduce using rule 51 (aexpression)


state 121

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   56 lexpression: aexpression EQUAL aexpression .

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 56 (lexpression)


state 122

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   61 lexpression: aexpression NEQUAL aexpression .

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 61 (lexpression)


state 123

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   57 lexpression: aexpression LESS_THAN aexpression .

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 57 (lexpression)


state 124

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   60 lexpression: aexpression LESS_EQUAL aexpression .

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 60 (lexpression)


state 125

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   58 lexpression: aexpression GREATER_THAN aexpression .

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 58 (lexpression)


state 126

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   59 lexpression: aexpression GREATER_EQ aexpression .

    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 59 (lexpression)


state 127

   47 aexpression: aexpression . PLUS aexpression
   47            | aexpression PLUS aexpression .
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    MODULUS  shift, and go to state 87
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 47 (aexpression)


state 128

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   48            | aexpression MINUS aexpression .
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    MODULUS  shift, and go to state 87
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    $default  reduce using rule 48 (aexpression)


state 129

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   49            | aexpression MULT aexpression .
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    $default  reduce using rule 49 (aexpression)


state 130

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   50            | aexpression DIVIDE aexpression .
   51            | aexpression . MODULUS aexpression

    $default  reduce using rule 50 (aexpression)


state 131

   62 lexpression: lexpression . AND lexpression
   62            | lexpression AND lexpression .
   63            | lexpression . OR lexpression

    $default  reduce using rule 62 (lexpression)


state 132

   62 lexpression: lexpression . AND lexpression
   63            | lexpression . OR lexpression
   63            | lexpression OR lexpression .

    $default  reduce using rule 63 (lexpression)


state 133

   24 statements: statements . statement
   30 ifelse: IF lexpression THEN statements . ENDIF SEMICOLON
   31       | IF lexpression THEN statements . ELSE statements ENDIF SEMICOLON

    ID     shift, and go to state 40
    READ   shift, and go to state 41
    WRITE  shift, and go to state 42
    IF     shift, and go to state 43
    ENDIF  shift, and go to state 147
    ELSE   shift, and go to state 148
    WHILE  shift, and go to state 44

    statement   go to state 46
    ifelse      go to state 47
    dowhile     go to state 48
    astatement  go to state 49
    read        go to state 50
    write       go to state 51


state 134

   24 statements: statements . statement
   32 dowhile: WHILE lexpression DO statements . ENDWHILE SEMICOLON

    ID        shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IF        shift, and go to state 43
    WHILE     shift, and go to state 44
    ENDWHILE  shift, and go to state 149

    statement   go to state 46
    ifelse      go to state 47
    dowhile     go to state 48
    astatement  go to state 49
    read        go to state 50
    write       go to state 51


state 135

   44 expression: LPAREN aexpression RPAREN .
   52 aexpression: LPAREN aexpression RPAREN .

    SEMICOLON  reduce using rule 44 (expression)
    $default   reduce using rule 52 (aexpression)


state 136

   43 expression: aexpression MODULUS aexpression .
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   51            | aexpression MODULUS aexpression .

    SEMICOLON  reduce using rule 43 (expression)
    $default   reduce using rule 51 (aexpression)


state 137

   39 expression: aexpression PLUS aexpression .
   47 aexpression: aexpression . PLUS aexpression
   47            | aexpression PLUS aexpression .
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    MODULUS  shift, and go to state 87
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    SEMICOLON  reduce using rule 39 (expression)
    $default   reduce using rule 47 (aexpression)


state 138

   40 expression: aexpression MINUS aexpression .
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   48            | aexpression MINUS aexpression .
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    MODULUS  shift, and go to state 87
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97

    SEMICOLON  reduce using rule 40 (expression)
    $default   reduce using rule 48 (aexpression)


state 139

   41 expression: aexpression MULT aexpression .
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   49            | aexpression MULT aexpression .
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    SEMICOLON  reduce using rule 41 (expression)
    $default   reduce using rule 49 (aexpression)


state 140

   42 expression: aexpression DIVIDE aexpression .
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   50            | aexpression DIVIDE aexpression .
   51            | aexpression . MODULUS aexpression

    SEMICOLON  reduce using rule 42 (expression)
    $default   reduce using rule 50 (aexpression)


state 141

   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression
   55            | ID LSQUARE aexpression . RSQUARE

    RSQUARE  shift, and go to state 150
    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97


state 142

   34 astatement: ID LSQUARE aexpression RSQUARE ASSIGN . expression SEMICOLON

    ID      shift, and go to state 60
    TRUE    shift, and go to state 61
    FALSE   shift, and go to state 62
    NOT     shift, and go to state 63
    NUMBER  shift, and go to state 69
    LPAREN  shift, and go to state 70

    expression   go to state 151
    aexpression  go to state 72
    lexpression  go to state 73


state 143

   36 read: READ LPAREN ID LSQUARE aexpression . RSQUARE RPAREN SEMICOLON
   47 aexpression: aexpression . PLUS aexpression
   48            | aexpression . MINUS aexpression
   49            | aexpression . MULT aexpression
   50            | aexpression . DIVIDE aexpression
   51            | aexpression . MODULUS aexpression

    RSQUARE  shift, and go to state 152
    MODULUS  shift, and go to state 87
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 95
    MULT     shift, and go to state 96
    DIVIDE   shift, and go to state 97


state 144

   35 read: READ LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 35 (read)


state 145

   37 write: WRITE LPAREN aexpression RPAREN SEMICOLON .

    $default  reduce using rule 37 (write)


state 146

   55 aexpression: ID LSQUARE aexpression RSQUARE .
   69 lexpression: ID LSQUARE aexpression RSQUARE .

    SEMICOLON  reduce using rule 69 (lexpression)
    AND        reduce using rule 69 (lexpression)
    OR         reduce using rule 69 (lexpression)
    THEN       reduce using rule 69 (lexpression)
    RPAREN     reduce using rule 55 (aexpression)
    RPAREN     [reduce using rule 69 (lexpression)]
    DO         reduce using rule 69 (lexpression)
    $default   reduce using rule 55 (aexpression)


state 147

   30 ifelse: IF lexpression THEN statements ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 153


state 148

   31 ifelse: IF lexpression THEN statements ELSE . statements ENDIF SEMICOLON

    $default  reduce using rule 23 (statements)

    statements  go to state 154


state 149

   32 dowhile: WHILE lexpression DO statements ENDWHILE . SEMICOLON

    SEMICOLON  shift, and go to state 155


state 150

   55 aexpression: ID LSQUARE aexpression RSQUARE .

    $default  reduce using rule 55 (aexpression)


state 151

   34 astatement: ID LSQUARE aexpression RSQUARE ASSIGN expression . SEMICOLON

    SEMICOLON  shift, and go to state 156


state 152

   36 read: READ LPAREN ID LSQUARE aexpression RSQUARE . RPAREN SEMICOLON

    RPAREN  shift, and go to state 157


state 153

   30 ifelse: IF lexpression THEN statements ENDIF SEMICOLON .

    $default  reduce using rule 30 (ifelse)


state 154

   24 statements: statements . statement
   31 ifelse: IF lexpression THEN statements ELSE statements . ENDIF SEMICOLON

    ID     shift, and go to state 40
    READ   shift, and go to state 41
    WRITE  shift, and go to state 42
    IF     shift, and go to state 43
    ENDIF  shift, and go to state 158
    WHILE  shift, and go to state 44

    statement   go to state 46
    ifelse      go to state 47
    dowhile     go to state 48
    astatement  go to state 49
    read        go to state 50
    write       go to state 51


state 155

   32 dowhile: WHILE lexpression DO statements ENDWHILE SEMICOLON .

    $default  reduce using rule 32 (dowhile)


state 156

   34 astatement: ID LSQUARE aexpression RSQUARE ASSIGN expression SEMICOLON .

    $default  reduce using rule 34 (astatement)


state 157

   36 read: READ LPAREN ID LSQUARE aexpression RSQUARE RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 159


state 158

   31 ifelse: IF lexpression THEN statements ELSE statements ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 160


state 159

   36 read: READ LPAREN ID LSQUARE aexpression RSQUARE RPAREN SEMICOLON .

    $default  reduce using rule 36 (read)


state 160

   31 ifelse: IF lexpression THEN statements ELSE statements ENDIF SEMICOLON .

    $default  reduce using rule 31 (ifelse)
