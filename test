decl
integer swap(integer &x , &y);
integer factorial(integer n);
enddecl



integer swap (integer &x, &y) {

decl

integer q;

enddecl

begin

q = x;

x = y;

y = q; // Note the syntax for using variables passed by reference.

return 1; // swap must return an integer.

end  // Note that SIL doesn’t support void functions.

}

integer factorial (integer n) {

decl

integer rvalue; 

enddecl

begin
if(n==1) then
  rvalue = 1;
else
  rvalue = n * factorial(n-1);
endif;
return rvalue; // swap must return an integer.

end  // Note that SIL doesn’t support void functions.

}

integer main( ){ // Main definition should always begin like this

decl

integer d,i,z;

enddecl

begin

read(i);
read(d);
z=swap(&i , &d);
write(factorial(d));
write(i);
return 1;    // Any integer value may be returned

end

}