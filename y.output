Grammar

    0 $accept: program $end

    1 program: Gdeclaration functions main_function

    2 Gdeclaration: DECL GdeclStatements ENDDECL

    3 GdeclStatements: /* empty */
    4                | GdeclStatements GdeclStatement

    5 GdeclStatement: type Gvars SEMICOLON

    6 Gvars: Gvar
    7      | Gvars COMMA Gvar

    8 type: INTEGER
    9     | BOOLEAN

   10 ftype: INTEGER
   11      | BOOLEAN

   12 parametr: /* empty */
   13         | PvarsList

   14 Fparametr: /* empty */
   15          | FvarsList

   16 FvarsList: FvarsList SEMICOLON FvarsDef
   17          | FvarsDef

   18 FvarsDef: type Fvars

   19 Fvars: Fvars COMMA Fvar
   20      | Fvar

   21 Fvar: ID
   22     | ADDRESSOF ID

   23 PvarsList: PvarsList SEMICOLON PvarsDef
   24          | PvarsDef

   25 PvarsDef: type Pvars

   26 Pvars: Pvars COMMA Pvar
   27      | Pvar

   28 Pvar: ID
   29     | ADDRESSOF ID

   30 functions: /* empty */
   31          | functions function

   32 $@1: /* empty */

   33 function: ftype ID $@1 LPAREN Fparametr RPAREN LFLOWER fbody RFLOWER

   34 Gvar: ID
   35     | ID LSQUARE NUMBER RSQUARE
   36     | ID LPAREN parametr RPAREN

   37 $@2: /* empty */

   38 main_function: INTEGER MAIN $@2 LPAREN RPAREN LFLOWER fbody RFLOWER

   39 $@3: /* empty */

   40 fbody: declaration $@3 beginbody

   41 $@4: /* empty */

   42 declaration: DECL $@4 declStatements ENDDECL

   43 declStatements: /* empty */
   44               | declStatements declStatement

   45 declStatement: type vars SEMICOLON

   46 vars: var
   47     | vars COMMA var

   48 var: ID

   49 beginbody: BEGINN statements return END

   50 statements: /* empty */
   51           | statements statement

   52 statement: ifelse
   53          | dowhile
   54          | read
   55          | write
   56          | astatement

   57 ifelse: IF expression THEN statements ENDIF SEMICOLON
   58       | IF expression THEN statements ELSE statements ENDIF SEMICOLON

   59 dowhile: WHILE expression DO statements ENDWHILE SEMICOLON

   60 astatement: ID ASSIGN expression SEMICOLON
   61           | ID LSQUARE expression RSQUARE ASSIGN expression SEMICOLON

   62 read: READ LPAREN ID RPAREN SEMICOLON
   63     | READ LPAREN ID LSQUARE expression RSQUARE RPAREN SEMICOLON

   64 write: WRITE LPAREN expression RPAREN SEMICOLON

   65 return: RETURN expression SEMICOLON

   66 expression: expression PLUS expression
   67           | expression MINUS expression
   68           | expression MULT expression
   69           | expression DIVIDE expression
   70           | expression MODULUS expression
   71           | expression EQUAL expression
   72           | expression LESS_THAN expression
   73           | expression GREATER_THAN expression
   74           | expression GREATER_EQ expression
   75           | expression LESS_EQUAL expression
   76           | expression NEQUAL expression
   77           | expression AND expression
   78           | expression OR expression
   79           | NOT expression
   80           | LPAREN expression RPAREN
   81           | TRUE
   82           | FALSE
   83           | NUMBER
   84           | ID
   85           | ID LSQUARE expression RSQUARE
   86           | ID LPAREN FexprList RPAREN

   87 FexprList: /* empty */
   88          | exprList

   89 exprList: exprList COMMA expression
   90         | expression
   91         | ADDRESSOF ID


Terminals, with rules where they appear

$end (0) 0
error (256)
DECL (258) 2 42
ENDDECL (259) 2 42
SEMICOLON (260) 5 16 23 45 57 58 59 60 61 62 63 64 65
COMMA (261) 7 19 26 47 89
INTEGER (262) 8 10 38
BOOLEAN (263) 9 11
ID (264) 21 22 28 29 33 34 35 36 48 60 61 62 63 84 85 86 91
LSQUARE (265) 35 61 63 85
RSQUARE (266) 35 61 63 85
TRUE (267) 81
FALSE (268) 82
ADDRESSOF (269) 22 29 91
MODULUS (270) 70
AND (271) 77
OR (272) 78
NOT (273) 79
READ (274) 62 63
WRITE (275) 64
IF (276) 57 58
ENDIF (277) 57 58
THEN (278) 57 58
ELSE (279) 58
WHILE (280) 59
NUMBER (281) 35 83
EQUAL (282) 71
ASSIGN (283) 60 61
NEQUAL (284) 76
LESS_THAN (285) 72
LESS_EQUAL (286) 75
GREATER_THAN (287) 73
GREATER_EQ (288) 74
PLUS (289) 66
MINUS (290) 67
MULT (291) 68
DIVIDE (292) 69
LPAREN (293) 33 36 38 62 63 64 80 86
RPAREN (294) 33 36 38 62 63 64 80 86
RFLOWER (295) 33 38
LFLOWER (296) 33 38
DO (297) 59
ENDWHILE (298) 59
BEGINN (299) 49
END (300) 49
RETURN (301) 65
MAIN (302) 38


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
Gdeclaration (50)
    on left: 2, on right: 1
GdeclStatements (51)
    on left: 3 4, on right: 2 4
GdeclStatement (52)
    on left: 5, on right: 4
Gvars (53)
    on left: 6 7, on right: 5 7
type (54)
    on left: 8 9, on right: 5 18 25 45
ftype (55)
    on left: 10 11, on right: 33
parametr (56)
    on left: 12 13, on right: 36
Fparametr (57)
    on left: 14 15, on right: 33
FvarsList (58)
    on left: 16 17, on right: 15 16
FvarsDef (59)
    on left: 18, on right: 16 17
Fvars (60)
    on left: 19 20, on right: 18 19
Fvar (61)
    on left: 21 22, on right: 19 20
PvarsList (62)
    on left: 23 24, on right: 13 23
PvarsDef (63)
    on left: 25, on right: 23 24
Pvars (64)
    on left: 26 27, on right: 25 26
Pvar (65)
    on left: 28 29, on right: 26 27
functions (66)
    on left: 30 31, on right: 1 31
function (67)
    on left: 33, on right: 31
$@1 (68)
    on left: 32, on right: 33
Gvar (69)
    on left: 34 35 36, on right: 6 7
main_function (70)
    on left: 38, on right: 1
$@2 (71)
    on left: 37, on right: 38
fbody (72)
    on left: 40, on right: 33 38
$@3 (73)
    on left: 39, on right: 40
declaration (74)
    on left: 42, on right: 40
$@4 (75)
    on left: 41, on right: 42
declStatements (76)
    on left: 43 44, on right: 42 44
declStatement (77)
    on left: 45, on right: 44
vars (78)
    on left: 46 47, on right: 45 47
var (79)
    on left: 48, on right: 46 47
beginbody (80)
    on left: 49, on right: 40
statements (81)
    on left: 50 51, on right: 49 51 57 58 59
statement (82)
    on left: 52 53 54 55 56, on right: 51
ifelse (83)
    on left: 57 58, on right: 52
dowhile (84)
    on left: 59, on right: 53
astatement (85)
    on left: 60 61, on right: 56
read (86)
    on left: 62 63, on right: 54
write (87)
    on left: 64, on right: 55
return (88)
    on left: 65, on right: 49
expression (89)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84 85 86, on right: 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 85 89 90
FexprList (90)
    on left: 87 88, on right: 86
exprList (91)
    on left: 89 90 91, on right: 88 89


state 0

    0 $accept: . program $end

    DECL  shift, and go to state 1

    program       go to state 2
    Gdeclaration  go to state 3


state 1

    2 Gdeclaration: DECL . GdeclStatements ENDDECL

    $default  reduce using rule 3 (GdeclStatements)

    GdeclStatements  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: Gdeclaration . functions main_function

    $default  reduce using rule 30 (functions)

    functions  go to state 6


state 4

    2 Gdeclaration: DECL GdeclStatements . ENDDECL
    4 GdeclStatements: GdeclStatements . GdeclStatement

    ENDDECL  shift, and go to state 7
    INTEGER  shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    GdeclStatement  go to state 10
    type            go to state 11


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: Gdeclaration functions . main_function
   31 functions: functions . function

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    ftype          go to state 14
    function       go to state 15
    main_function  go to state 16


state 7

    2 Gdeclaration: DECL GdeclStatements ENDDECL .

    $default  reduce using rule 2 (Gdeclaration)


state 8

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


state 9

    9 type: BOOLEAN .

    $default  reduce using rule 9 (type)


state 10

    4 GdeclStatements: GdeclStatements GdeclStatement .

    $default  reduce using rule 4 (GdeclStatements)


state 11

    5 GdeclStatement: type . Gvars SEMICOLON

    ID  shift, and go to state 17

    Gvars  go to state 18
    Gvar   go to state 19


state 12

   10 ftype: INTEGER .
   38 main_function: INTEGER . MAIN $@2 LPAREN RPAREN LFLOWER fbody RFLOWER

    MAIN  shift, and go to state 20

    $default  reduce using rule 10 (ftype)


state 13

   11 ftype: BOOLEAN .

    $default  reduce using rule 11 (ftype)


state 14

   33 function: ftype . ID $@1 LPAREN Fparametr RPAREN LFLOWER fbody RFLOWER

    ID  shift, and go to state 21


state 15

   31 functions: functions function .

    $default  reduce using rule 31 (functions)


state 16

    1 program: Gdeclaration functions main_function .

    $default  reduce using rule 1 (program)


state 17

   34 Gvar: ID .
   35     | ID . LSQUARE NUMBER RSQUARE
   36     | ID . LPAREN parametr RPAREN

    LSQUARE  shift, and go to state 22
    LPAREN   shift, and go to state 23

    $default  reduce using rule 34 (Gvar)


state 18

    5 GdeclStatement: type Gvars . SEMICOLON
    7 Gvars: Gvars . COMMA Gvar

    SEMICOLON  shift, and go to state 24
    COMMA      shift, and go to state 25


state 19

    6 Gvars: Gvar .

    $default  reduce using rule 6 (Gvars)


state 20

   38 main_function: INTEGER MAIN . $@2 LPAREN RPAREN LFLOWER fbody RFLOWER

    $default  reduce using rule 37 ($@2)

    $@2  go to state 26


state 21

   33 function: ftype ID . $@1 LPAREN Fparametr RPAREN LFLOWER fbody RFLOWER

    $default  reduce using rule 32 ($@1)

    $@1  go to state 27


state 22

   35 Gvar: ID LSQUARE . NUMBER RSQUARE

    NUMBER  shift, and go to state 28


state 23

   36 Gvar: ID LPAREN . parametr RPAREN

    INTEGER  shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 12 (parametr)

    type       go to state 29
    parametr   go to state 30
    PvarsList  go to state 31
    PvarsDef   go to state 32


state 24

    5 GdeclStatement: type Gvars SEMICOLON .

    $default  reduce using rule 5 (GdeclStatement)


state 25

    7 Gvars: Gvars COMMA . Gvar

    ID  shift, and go to state 17

    Gvar  go to state 33


state 26

   38 main_function: INTEGER MAIN $@2 . LPAREN RPAREN LFLOWER fbody RFLOWER

    LPAREN  shift, and go to state 34


state 27

   33 function: ftype ID $@1 . LPAREN Fparametr RPAREN LFLOWER fbody RFLOWER

    LPAREN  shift, and go to state 35


state 28

   35 Gvar: ID LSQUARE NUMBER . RSQUARE

    RSQUARE  shift, and go to state 36


state 29

   25 PvarsDef: type . Pvars

    ID         shift, and go to state 37
    ADDRESSOF  shift, and go to state 38

    Pvars  go to state 39
    Pvar   go to state 40


state 30

   36 Gvar: ID LPAREN parametr . RPAREN

    RPAREN  shift, and go to state 41


state 31

   13 parametr: PvarsList .
   23 PvarsList: PvarsList . SEMICOLON PvarsDef

    SEMICOLON  shift, and go to state 42

    $default  reduce using rule 13 (parametr)


state 32

   24 PvarsList: PvarsDef .

    $default  reduce using rule 24 (PvarsList)


state 33

    7 Gvars: Gvars COMMA Gvar .

    $default  reduce using rule 7 (Gvars)


state 34

   38 main_function: INTEGER MAIN $@2 LPAREN . RPAREN LFLOWER fbody RFLOWER

    RPAREN  shift, and go to state 43


state 35

   33 function: ftype ID $@1 LPAREN . Fparametr RPAREN LFLOWER fbody RFLOWER

    INTEGER  shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 14 (Fparametr)

    type       go to state 44
    Fparametr  go to state 45
    FvarsList  go to state 46
    FvarsDef   go to state 47


state 36

   35 Gvar: ID LSQUARE NUMBER RSQUARE .

    $default  reduce using rule 35 (Gvar)


state 37

   28 Pvar: ID .

    $default  reduce using rule 28 (Pvar)


state 38

   29 Pvar: ADDRESSOF . ID

    ID  shift, and go to state 48


state 39

   25 PvarsDef: type Pvars .
   26 Pvars: Pvars . COMMA Pvar

    COMMA  shift, and go to state 49

    $default  reduce using rule 25 (PvarsDef)


state 40

   27 Pvars: Pvar .

    $default  reduce using rule 27 (Pvars)


state 41

   36 Gvar: ID LPAREN parametr RPAREN .

    $default  reduce using rule 36 (Gvar)


state 42

   23 PvarsList: PvarsList SEMICOLON . PvarsDef

    INTEGER  shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    type      go to state 29
    PvarsDef  go to state 50


state 43

   38 main_function: INTEGER MAIN $@2 LPAREN RPAREN . LFLOWER fbody RFLOWER

    LFLOWER  shift, and go to state 51


state 44

   18 FvarsDef: type . Fvars

    ID         shift, and go to state 52
    ADDRESSOF  shift, and go to state 53

    Fvars  go to state 54
    Fvar   go to state 55


state 45

   33 function: ftype ID $@1 LPAREN Fparametr . RPAREN LFLOWER fbody RFLOWER

    RPAREN  shift, and go to state 56


state 46

   15 Fparametr: FvarsList .
   16 FvarsList: FvarsList . SEMICOLON FvarsDef

    SEMICOLON  shift, and go to state 57

    $default  reduce using rule 15 (Fparametr)


state 47

   17 FvarsList: FvarsDef .

    $default  reduce using rule 17 (FvarsList)


state 48

   29 Pvar: ADDRESSOF ID .

    $default  reduce using rule 29 (Pvar)


state 49

   26 Pvars: Pvars COMMA . Pvar

    ID         shift, and go to state 37
    ADDRESSOF  shift, and go to state 38

    Pvar  go to state 58


state 50

   23 PvarsList: PvarsList SEMICOLON PvarsDef .

    $default  reduce using rule 23 (PvarsList)


state 51

   38 main_function: INTEGER MAIN $@2 LPAREN RPAREN LFLOWER . fbody RFLOWER

    DECL  shift, and go to state 59

    fbody        go to state 60
    declaration  go to state 61


state 52

   21 Fvar: ID .

    $default  reduce using rule 21 (Fvar)


state 53

   22 Fvar: ADDRESSOF . ID

    ID  shift, and go to state 62


state 54

   18 FvarsDef: type Fvars .
   19 Fvars: Fvars . COMMA Fvar

    COMMA  shift, and go to state 63

    $default  reduce using rule 18 (FvarsDef)


state 55

   20 Fvars: Fvar .

    $default  reduce using rule 20 (Fvars)


state 56

   33 function: ftype ID $@1 LPAREN Fparametr RPAREN . LFLOWER fbody RFLOWER

    LFLOWER  shift, and go to state 64


state 57

   16 FvarsList: FvarsList SEMICOLON . FvarsDef

    INTEGER  shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    type      go to state 44
    FvarsDef  go to state 65


state 58

   26 Pvars: Pvars COMMA Pvar .

    $default  reduce using rule 26 (Pvars)


state 59

   42 declaration: DECL . $@4 declStatements ENDDECL

    $default  reduce using rule 41 ($@4)

    $@4  go to state 66


state 60

   38 main_function: INTEGER MAIN $@2 LPAREN RPAREN LFLOWER fbody . RFLOWER

    RFLOWER  shift, and go to state 67


state 61

   40 fbody: declaration . $@3 beginbody

    $default  reduce using rule 39 ($@3)

    $@3  go to state 68


state 62

   22 Fvar: ADDRESSOF ID .

    $default  reduce using rule 22 (Fvar)


state 63

   19 Fvars: Fvars COMMA . Fvar

    ID         shift, and go to state 52
    ADDRESSOF  shift, and go to state 53

    Fvar  go to state 69


state 64

   33 function: ftype ID $@1 LPAREN Fparametr RPAREN LFLOWER . fbody RFLOWER

    DECL  shift, and go to state 59

    fbody        go to state 70
    declaration  go to state 61


state 65

   16 FvarsList: FvarsList SEMICOLON FvarsDef .

    $default  reduce using rule 16 (FvarsList)


state 66

   42 declaration: DECL $@4 . declStatements ENDDECL

    $default  reduce using rule 43 (declStatements)

    declStatements  go to state 71


state 67

   38 main_function: INTEGER MAIN $@2 LPAREN RPAREN LFLOWER fbody RFLOWER .

    $default  reduce using rule 38 (main_function)


state 68

   40 fbody: declaration $@3 . beginbody

    BEGINN  shift, and go to state 72

    beginbody  go to state 73


state 69

   19 Fvars: Fvars COMMA Fvar .

    $default  reduce using rule 19 (Fvars)


state 70

   33 function: ftype ID $@1 LPAREN Fparametr RPAREN LFLOWER fbody . RFLOWER

    RFLOWER  shift, and go to state 74


state 71

   42 declaration: DECL $@4 declStatements . ENDDECL
   44 declStatements: declStatements . declStatement

    ENDDECL  shift, and go to state 75
    INTEGER  shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    type           go to state 76
    declStatement  go to state 77


state 72

   49 beginbody: BEGINN . statements return END

    $default  reduce using rule 50 (statements)

    statements  go to state 78


state 73

   40 fbody: declaration $@3 beginbody .

    $default  reduce using rule 40 (fbody)


state 74

   33 function: ftype ID $@1 LPAREN Fparametr RPAREN LFLOWER fbody RFLOWER .

    $default  reduce using rule 33 (function)


state 75

   42 declaration: DECL $@4 declStatements ENDDECL .

    $default  reduce using rule 42 (declaration)


state 76

   45 declStatement: type . vars SEMICOLON

    ID  shift, and go to state 79

    vars  go to state 80
    var   go to state 81


state 77

   44 declStatements: declStatements declStatement .

    $default  reduce using rule 44 (declStatements)


state 78

   49 beginbody: BEGINN statements . return END
   51 statements: statements . statement

    ID      shift, and go to state 82
    READ    shift, and go to state 83
    WRITE   shift, and go to state 84
    IF      shift, and go to state 85
    WHILE   shift, and go to state 86
    RETURN  shift, and go to state 87

    statement   go to state 88
    ifelse      go to state 89
    dowhile     go to state 90
    astatement  go to state 91
    read        go to state 92
    write       go to state 93
    return      go to state 94


state 79

   48 var: ID .

    $default  reduce using rule 48 (var)


state 80

   45 declStatement: type vars . SEMICOLON
   47 vars: vars . COMMA var

    SEMICOLON  shift, and go to state 95
    COMMA      shift, and go to state 96


state 81

   46 vars: var .

    $default  reduce using rule 46 (vars)


state 82

   60 astatement: ID . ASSIGN expression SEMICOLON
   61           | ID . LSQUARE expression RSQUARE ASSIGN expression SEMICOLON

    LSQUARE  shift, and go to state 97
    ASSIGN   shift, and go to state 98


state 83

   62 read: READ . LPAREN ID RPAREN SEMICOLON
   63     | READ . LPAREN ID LSQUARE expression RSQUARE RPAREN SEMICOLON

    LPAREN  shift, and go to state 99


state 84

   64 write: WRITE . LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 100


state 85

   57 ifelse: IF . expression THEN statements ENDIF SEMICOLON
   58       | IF . expression THEN statements ELSE statements ENDIF SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 107


state 86

   59 dowhile: WHILE . expression DO statements ENDWHILE SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 108


state 87

   65 return: RETURN . expression SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 109


state 88

   51 statements: statements statement .

    $default  reduce using rule 51 (statements)


state 89

   52 statement: ifelse .

    $default  reduce using rule 52 (statement)


state 90

   53 statement: dowhile .

    $default  reduce using rule 53 (statement)


state 91

   56 statement: astatement .

    $default  reduce using rule 56 (statement)


state 92

   54 statement: read .

    $default  reduce using rule 54 (statement)


state 93

   55 statement: write .

    $default  reduce using rule 55 (statement)


state 94

   49 beginbody: BEGINN statements return . END

    END  shift, and go to state 110


state 95

   45 declStatement: type vars SEMICOLON .

    $default  reduce using rule 45 (declStatement)


state 96

   47 vars: vars COMMA . var

    ID  shift, and go to state 79

    var  go to state 111


state 97

   61 astatement: ID LSQUARE . expression RSQUARE ASSIGN expression SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 112


state 98

   60 astatement: ID ASSIGN . expression SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 113


state 99

   62 read: READ LPAREN . ID RPAREN SEMICOLON
   63     | READ LPAREN . ID LSQUARE expression RSQUARE RPAREN SEMICOLON

    ID  shift, and go to state 114


state 100

   64 write: WRITE LPAREN . expression RPAREN SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 115


state 101

   84 expression: ID .
   85           | ID . LSQUARE expression RSQUARE
   86           | ID . LPAREN FexprList RPAREN

    LSQUARE  shift, and go to state 116
    LPAREN   shift, and go to state 117

    $default  reduce using rule 84 (expression)


state 102

   81 expression: TRUE .

    $default  reduce using rule 81 (expression)


state 103

   82 expression: FALSE .

    $default  reduce using rule 82 (expression)


state 104

   79 expression: NOT . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 118


state 105

   83 expression: NUMBER .

    $default  reduce using rule 83 (expression)


state 106

   80 expression: LPAREN . expression RPAREN

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 119


state 107

   57 ifelse: IF expression . THEN statements ENDIF SEMICOLON
   58       | IF expression . THEN statements ELSE statements ENDIF SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    THEN          shift, and go to state 123
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133


state 108

   59 dowhile: WHILE expression . DO statements ENDWHILE SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133
    DO            shift, and go to state 134


state 109

   65 return: RETURN expression . SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    SEMICOLON     shift, and go to state 135
    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133


state 110

   49 beginbody: BEGINN statements return END .

    $default  reduce using rule 49 (beginbody)


state 111

   47 vars: vars COMMA var .

    $default  reduce using rule 47 (vars)


state 112

   61 astatement: ID LSQUARE expression . RSQUARE ASSIGN expression SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    RSQUARE       shift, and go to state 136
    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133


state 113

   60 astatement: ID ASSIGN expression . SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    SEMICOLON     shift, and go to state 137
    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133


state 114

   62 read: READ LPAREN ID . RPAREN SEMICOLON
   63     | READ LPAREN ID . LSQUARE expression RSQUARE RPAREN SEMICOLON

    LSQUARE  shift, and go to state 138
    RPAREN   shift, and go to state 139


state 115

   64 write: WRITE LPAREN expression . RPAREN SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133
    RPAREN        shift, and go to state 140


state 116

   85 expression: ID LSQUARE . expression RSQUARE

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 141


state 117

   86 expression: ID LPAREN . FexprList RPAREN

    ID         shift, and go to state 101
    TRUE       shift, and go to state 102
    FALSE      shift, and go to state 103
    ADDRESSOF  shift, and go to state 142
    NOT        shift, and go to state 104
    NUMBER     shift, and go to state 105
    LPAREN     shift, and go to state 106

    $default  reduce using rule 87 (FexprList)

    expression  go to state 143
    FexprList   go to state 144
    exprList    go to state 145


state 118

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression
   79           | NOT expression .

    MODULUS  shift, and go to state 120
    PLUS     shift, and go to state 130
    MINUS    shift, and go to state 131
    MULT     shift, and go to state 132
    DIVIDE   shift, and go to state 133

    $default  reduce using rule 79 (expression)


state 119

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression
   80           | LPAREN expression . RPAREN

    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133
    RPAREN        shift, and go to state 146


state 120

   70 expression: expression MODULUS . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 147


state 121

   77 expression: expression AND . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 148


state 122

   78 expression: expression OR . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 149


state 123

   57 ifelse: IF expression THEN . statements ENDIF SEMICOLON
   58       | IF expression THEN . statements ELSE statements ENDIF SEMICOLON

    $default  reduce using rule 50 (statements)

    statements  go to state 150


state 124

   71 expression: expression EQUAL . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 151


state 125

   76 expression: expression NEQUAL . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 152


state 126

   72 expression: expression LESS_THAN . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 153


state 127

   75 expression: expression LESS_EQUAL . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 154


state 128

   73 expression: expression GREATER_THAN . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 155


state 129

   74 expression: expression GREATER_EQ . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 156


state 130

   66 expression: expression PLUS . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 157


state 131

   67 expression: expression MINUS . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 158


state 132

   68 expression: expression MULT . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 159


state 133

   69 expression: expression DIVIDE . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 160


state 134

   59 dowhile: WHILE expression DO . statements ENDWHILE SEMICOLON

    $default  reduce using rule 50 (statements)

    statements  go to state 161


state 135

   65 return: RETURN expression SEMICOLON .

    $default  reduce using rule 65 (return)


state 136

   61 astatement: ID LSQUARE expression RSQUARE . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 162


state 137

   60 astatement: ID ASSIGN expression SEMICOLON .

    $default  reduce using rule 60 (astatement)


state 138

   63 read: READ LPAREN ID LSQUARE . expression RSQUARE RPAREN SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 163


state 139

   62 read: READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 164


state 140

   64 write: WRITE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 165


state 141

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression
   85           | ID LSQUARE expression . RSQUARE

    RSQUARE       shift, and go to state 166
    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133


state 142

   91 exprList: ADDRESSOF . ID

    ID  shift, and go to state 167


state 143

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression
   90 exprList: expression .

    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133

    $default  reduce using rule 90 (exprList)


state 144

   86 expression: ID LPAREN FexprList . RPAREN

    RPAREN  shift, and go to state 168


state 145

   88 FexprList: exprList .
   89 exprList: exprList . COMMA expression

    COMMA  shift, and go to state 169

    $default  reduce using rule 88 (FexprList)


state 146

   80 expression: LPAREN expression RPAREN .

    $default  reduce using rule 80 (expression)


state 147

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   70           | expression MODULUS expression .
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    $default  reduce using rule 70 (expression)


state 148

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   77           | expression AND expression .
   78           | expression . OR expression

    MODULUS       shift, and go to state 120
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133

    $default  reduce using rule 77 (expression)


state 149

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression
   78           | expression OR expression .

    MODULUS       shift, and go to state 120
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133

    $default  reduce using rule 78 (expression)


state 150

   51 statements: statements . statement
   57 ifelse: IF expression THEN statements . ENDIF SEMICOLON
   58       | IF expression THEN statements . ELSE statements ENDIF SEMICOLON

    ID     shift, and go to state 82
    READ   shift, and go to state 83
    WRITE  shift, and go to state 84
    IF     shift, and go to state 85
    ENDIF  shift, and go to state 170
    ELSE   shift, and go to state 171
    WHILE  shift, and go to state 86

    statement   go to state 88
    ifelse      go to state 89
    dowhile     go to state 90
    astatement  go to state 91
    read        go to state 92
    write       go to state 93


state 151

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   71           | expression EQUAL expression .
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS       shift, and go to state 120
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133

    $default  reduce using rule 71 (expression)


state 152

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   76           | expression NEQUAL expression .
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS       shift, and go to state 120
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133

    $default  reduce using rule 76 (expression)


state 153

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   72           | expression LESS_THAN expression .
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS  shift, and go to state 120
    PLUS     shift, and go to state 130
    MINUS    shift, and go to state 131
    MULT     shift, and go to state 132
    DIVIDE   shift, and go to state 133

    $default  reduce using rule 72 (expression)


state 154

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   75           | expression LESS_EQUAL expression .
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS  shift, and go to state 120
    PLUS     shift, and go to state 130
    MINUS    shift, and go to state 131
    MULT     shift, and go to state 132
    DIVIDE   shift, and go to state 133

    $default  reduce using rule 75 (expression)


state 155

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   73           | expression GREATER_THAN expression .
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS  shift, and go to state 120
    PLUS     shift, and go to state 130
    MINUS    shift, and go to state 131
    MULT     shift, and go to state 132
    DIVIDE   shift, and go to state 133

    $default  reduce using rule 73 (expression)


state 156

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   74           | expression GREATER_EQ expression .
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS  shift, and go to state 120
    PLUS     shift, and go to state 130
    MINUS    shift, and go to state 131
    MULT     shift, and go to state 132
    DIVIDE   shift, and go to state 133

    $default  reduce using rule 74 (expression)


state 157

   66 expression: expression . PLUS expression
   66           | expression PLUS expression .
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS  shift, and go to state 120
    MULT     shift, and go to state 132
    DIVIDE   shift, and go to state 133

    $default  reduce using rule 66 (expression)


state 158

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   67           | expression MINUS expression .
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    MODULUS  shift, and go to state 120
    MULT     shift, and go to state 132
    DIVIDE   shift, and go to state 133

    $default  reduce using rule 67 (expression)


state 159

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   68           | expression MULT expression .
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    $default  reduce using rule 68 (expression)


state 160

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   69           | expression DIVIDE expression .
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    $default  reduce using rule 69 (expression)


state 161

   51 statements: statements . statement
   59 dowhile: WHILE expression DO statements . ENDWHILE SEMICOLON

    ID        shift, and go to state 82
    READ      shift, and go to state 83
    WRITE     shift, and go to state 84
    IF        shift, and go to state 85
    WHILE     shift, and go to state 86
    ENDWHILE  shift, and go to state 172

    statement   go to state 88
    ifelse      go to state 89
    dowhile     go to state 90
    astatement  go to state 91
    read        go to state 92
    write       go to state 93


state 162

   61 astatement: ID LSQUARE expression RSQUARE ASSIGN . expression SEMICOLON

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 173


state 163

   63 read: READ LPAREN ID LSQUARE expression . RSQUARE RPAREN SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    RSQUARE       shift, and go to state 174
    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133


state 164

   62 read: READ LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 62 (read)


state 165

   64 write: WRITE LPAREN expression RPAREN SEMICOLON .

    $default  reduce using rule 64 (write)


state 166

   85 expression: ID LSQUARE expression RSQUARE .

    $default  reduce using rule 85 (expression)


state 167

   91 exprList: ADDRESSOF ID .

    $default  reduce using rule 91 (exprList)


state 168

   86 expression: ID LPAREN FexprList RPAREN .

    $default  reduce using rule 86 (expression)


state 169

   89 exprList: exprList COMMA . expression

    ID      shift, and go to state 101
    TRUE    shift, and go to state 102
    FALSE   shift, and go to state 103
    NOT     shift, and go to state 104
    NUMBER  shift, and go to state 105
    LPAREN  shift, and go to state 106

    expression  go to state 175


state 170

   57 ifelse: IF expression THEN statements ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 176


state 171

   58 ifelse: IF expression THEN statements ELSE . statements ENDIF SEMICOLON

    $default  reduce using rule 50 (statements)

    statements  go to state 177


state 172

   59 dowhile: WHILE expression DO statements ENDWHILE . SEMICOLON

    SEMICOLON  shift, and go to state 178


state 173

   61 astatement: ID LSQUARE expression RSQUARE ASSIGN expression . SEMICOLON
   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression

    SEMICOLON     shift, and go to state 179
    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133


state 174

   63 read: READ LPAREN ID LSQUARE expression RSQUARE . RPAREN SEMICOLON

    RPAREN  shift, and go to state 180


state 175

   66 expression: expression . PLUS expression
   67           | expression . MINUS expression
   68           | expression . MULT expression
   69           | expression . DIVIDE expression
   70           | expression . MODULUS expression
   71           | expression . EQUAL expression
   72           | expression . LESS_THAN expression
   73           | expression . GREATER_THAN expression
   74           | expression . GREATER_EQ expression
   75           | expression . LESS_EQUAL expression
   76           | expression . NEQUAL expression
   77           | expression . AND expression
   78           | expression . OR expression
   89 exprList: exprList COMMA expression .

    MODULUS       shift, and go to state 120
    AND           shift, and go to state 121
    OR            shift, and go to state 122
    EQUAL         shift, and go to state 124
    NEQUAL        shift, and go to state 125
    LESS_THAN     shift, and go to state 126
    LESS_EQUAL    shift, and go to state 127
    GREATER_THAN  shift, and go to state 128
    GREATER_EQ    shift, and go to state 129
    PLUS          shift, and go to state 130
    MINUS         shift, and go to state 131
    MULT          shift, and go to state 132
    DIVIDE        shift, and go to state 133

    $default  reduce using rule 89 (exprList)


state 176

   57 ifelse: IF expression THEN statements ENDIF SEMICOLON .

    $default  reduce using rule 57 (ifelse)


state 177

   51 statements: statements . statement
   58 ifelse: IF expression THEN statements ELSE statements . ENDIF SEMICOLON

    ID     shift, and go to state 82
    READ   shift, and go to state 83
    WRITE  shift, and go to state 84
    IF     shift, and go to state 85
    ENDIF  shift, and go to state 181
    WHILE  shift, and go to state 86

    statement   go to state 88
    ifelse      go to state 89
    dowhile     go to state 90
    astatement  go to state 91
    read        go to state 92
    write       go to state 93


state 178

   59 dowhile: WHILE expression DO statements ENDWHILE SEMICOLON .

    $default  reduce using rule 59 (dowhile)


state 179

   61 astatement: ID LSQUARE expression RSQUARE ASSIGN expression SEMICOLON .

    $default  reduce using rule 61 (astatement)


state 180

   63 read: READ LPAREN ID LSQUARE expression RSQUARE RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 182


state 181

   58 ifelse: IF expression THEN statements ELSE statements ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 183


state 182

   63 read: READ LPAREN ID LSQUARE expression RSQUARE RPAREN SEMICOLON .

    $default  reduce using rule 63 (read)


state 183

   58 ifelse: IF expression THEN statements ELSE statements ENDIF SEMICOLON .

    $default  reduce using rule 58 (ifelse)
